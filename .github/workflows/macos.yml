name: Build for macOS

on:
  push:
    # branches: [ marceltaeumel/actions ]
    paths:
      - '.github/workflows/macos.yml' # This workflow spec
      - 'scripts/ci/**' # Support scripts for this workflow
      - 'deploy/**' # More support scripts for this workflow

      - 'build.macos*/**' # Makefile-based build scripts
      - '*src/**' # Generated VMMaker sources (incl. plugins)
      - 'platforms/Cross/**'
      - 'platforms/iOS/**' # Note that 'platforms/Mac OS' is deprecated

      - '!**.md'
      - '!**HowToBuild'



jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        arch: 
          - macos64x64
          # - macos32x86
        flavor:
          - squeak.cog.spur
          # - squeak.stack.spur
          # - pharo.cog.spur
          # - pharo.stack.spur
          # - newspeak.cog.spur
          # - newspeak.stack.spur
        mode:
          - fast
          - debug
          - assert
        # include:
          # compatibility with Squeak 4.6 and older
          # - arch: win32x86
          #   flavor: squeak.cog.v3
          # - arch: win32x86
          #   flavor: squeak.stack.v3
          # newer flavors w/ Sista-CogIt or Lowcode byteset
          # - arch: win32x86
          #   flavor: squeak.sista.spur
          # - arch: win32x86
          #   flavor: pharo.sista.spur
          # - arch: win32x86
          #   flavor: squeak.cog.spur.lowcode
          # - arch: win32x86
          #   flavor: pharo.cog.spur.lowcode
    runs-on: macos-latest
    name: ${{ matrix.flavor }} for ${{ matrix.arch }}${{ matrix.mode == 'debug' && ' (DEBUG)' || matrix.mode == 'assert' && ' (ASSERT)' || '' }}
    env:
      ARCH: ${{ matrix.arch }}
      FLAVOR: ${{ matrix.flavor }}
      MODE: ${{ matrix.mode }}
    steps:
      - name: Checkout files
        uses: actions/checkout@v2

      - name: Restore build cache
        uses: actions/cache@v2
        with:
          path: .thirdparty-cache
          key: thirdparty-cache # same for all runner.os

      # - name: Setup tmate debugging session
        # uses: mxschmitt/action-tmate@v3

      - name: Build VM
        run: ./scripts/ci/actions_build.sh

      - name: Sign VM (secrets missing)
        if: false
        run: ./deploy/sign-vm.sh
        env:
          SQUEAK_SIGN_PASSWORD: ${{ secrets.SQUEAK_SIGN_PASSWORD }}
          SQUEAK_CERT_PASSWORD: ${{ secrets.SQUEAK_CERT_PASSWORD }}
          SQUEAK_SIGN_IDENTITY: ${{ secrets.SQUEAK_SIGN_IDENTITY }}
          PHARO_SIGN_PASSWORD: ${{ secrets.PHARO_SIGN_PASSWORD }}
          PHARO_CERT_PASSWORD: ${{ secrets.PHARO_CERT_PASSWORD }}
          PHARO_SIGN_IDENTITY: ${{ secrets.PHARO_SIGN_IDENTITY }}
          NEWSPEAK_SIGN_PASSWORD: ${{ secrets.NEWSPEAK_SIGN_PASSWORD }}
          NEWSPEAK_CERT_PASSWORD: ${{ secrets.NEWSPEAK_CERT_PASSWORD }}
          NEWSPEAK_SIGN_IDENTITY: ${{ secrets.NEWSPEAK_SIGN_IDENTITY }}

      - name: Pack VM
        run: ./deploy/pack-vm.sh

      - name: Store artifact w/ revision
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ASSET_NAME }}_${{ env.ASSET_REVISION }}
          path: products/${{ env.ASSET_NAME }}.${{ env.ASSET_EXTENSION }}

      - name: Update artifact in latest-release
        uses: ncipollo/release-action@v1.8.6
        if: endsWith( github.ref , 'Cog' )
        with:
          prerelease: true
          allowUpdates: true
          replacesArtifacts: true
          artifacts: products/${{ env.ASSET_NAME }}.${{ env.ASSET_EXTENSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ matrix.mode == 'debug' && 'latest-debug-build' || matrix.mode == 'assert' && 'latest-assert-build' || 'latest-build' }}
          body: ${{ github.event.head_commit.message }}
